package com.app.controllers;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.custom_exception.ResourceNotFoundException;
import com.app.dao.CustomerDao;
import com.app.dao.MessDao;
import com.app.dto.ApiResponse;
import com.app.dto.CredentialsDTO;
import com.app.dto.CustomerDTO;
import com.app.dto.MessDTO;
import com.app.dto.OwnerDTO;
import com.app.dto.SignUpDto;
import com.app.pojos.Customer;
import com.app.pojos.Dish;
import com.app.pojos.Mess;
import com.app.pojos.Owner;
import com.app.service.AdminService;
import com.app.service.CustomerService;
import com.app.service.DishService;
import com.app.service.MessService;

@RestController
@CrossOrigin
@RequestMapping("/mess")
@Validated
public class MessController {

	@Autowired
	private MessService messService;
	
	@Autowired
	private MessDao messDao;
	
	@PutMapping
	public Mess updateMessDetails(@RequestBody MessDTO detachedMess) {
		//System.out.println("in update emp " + detachedCustomer.getId());// not null
		return messService.updateMessDetails(detachedMess);
	}
	
	@PostMapping("/signup")
    public ResponseEntity<?> registerMess(@RequestBody MessDTO transientMess){
//	Boolean exist=customerService.findByEmail(transientCust.getEmail());
//	if(!exist)
	{
		Mess trmess=new Mess();
		trmess.setname(transientMess.getName());
		trmess.setaddress(transientMess.getAddress());
		trmess.setmob(transientMess.getMob());
		trmess.setMyOwner(transientMess.getMyOwner());
		
		messDao.save(trmess);
		return new ResponseEntity<>("User registered successfully", HttpStatus.OK);
		
	}
//	else
//		throw new ResourceNotFoundException("Email already exists!");

	
}
	
	
	
	
	
}//class
