package com.app.controllers;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.custom_exception.ResourceNotFoundException;
import com.app.dto.CredentialsDTO;
import com.app.dto.SignUpDto;
import com.app.pojos.Customer;
import com.app.service.CustomerService;
import com.app.service.OwnerService;

@RestController
@CrossOrigin
@RequestMapping("/owner")
@Validated
public class OwnerController {

	@Autowired
	private OwnerService ownerService;
	
	@PostMapping("/signin")
	public ResponseEntity<?> validateOwner(@RequestBody @Valid CredentialsDTO dto) {
		return ResponseEntity.ok(ownerService.authenticateOwner(dto));
	}
	@PostMapping("/signup")
	public ResponseEntity<?> registerOwner(@RequestBody SignUpDto signUpDto){
		Boolean exist=customerService.findByEmail(signUpDto.getEmail());
		if(!exist)
		{
			Customer cust=new Customer();
			cust.setName(signUpDto.getName());
			cust.setEmail(signUpDto.getEmail());
			cust.setMob(signUpDto.getMob());
			cust.setPassword(signUpDto.getPassword());
			
			customerDao.save(cust);
			return new ResponseEntity<>("User registered successfully", HttpStatus.OK);
			
		}
		else
			throw new ResourceNotFoundException("Email already exists!");

		
	} 
	
}
